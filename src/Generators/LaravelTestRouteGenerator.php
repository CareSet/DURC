<?php
/*
	TODO add description of the purpose of this file
*/
namespace CareSet\DURC\Generators;

use Illuminate\Support\Facades\Artisan;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\File;
use Symfony\Component\Process\Process;
use Illuminate\Support\Facades\DB;
use CareSet\DURC\DURC;

class LaravelTestRouteGenerator extends \CareSet\DURC\DURCGenerator {






	//so that we target the same file the whole time..
	public static function getFile(){
		$file_name = base_path()."/routes/durc_test.php";
		return($file_name);
	}

        public static function start(
                                                        $db_config,
                                                        $squash,
                                                        $URLroot){

		$file = LaravelTestRouteGenerator::getFile();

                $gen_string = DURC::get_gen_string();

		$header = "<?php
/*
	This test route is automatically added.
	IF you would like to quickly see and test all of the index routes that are generated by DURC
	to use: http://[baseUrl]/durctest
	
	To remove routes from production, remove the require for this file from the register() method
	of the DURCServiceProvider.

*/

//This closure lists all of the index routes that DURC knows about...
Route::get('durctest', function () {
    \$route_list = [ 



";
		//note that this function ignores the squash for now...
		file_put_contents($file,$header); //empty the current file..

	}

        public static function finish(
							$db_config,
                                                        $squash,
                                                        $URLroot){

	
		$file = LaravelTestRouteGenerator::getFile();


		$trailer = "


	]; //end route_list

	\$html = '<html><head><title>DURC Test Page</title><body><h1>DURC Test Page</h1><h3>DO NOT USE IN PRODUCTION!!!</h3>';

	\$html .= '<ul>';

	foreach(\$route_list as \$this_relative_link){
		\$html  .= \"<li><a href='\$this_relative_link'>\$this_relative_link </a> </li> \";
	}

	\$html .= '</ul></body></html>';
	return \$html;
}); //end DURC test route closure

Route::get('/',function () {
	\$test_data = ['content' => '<h1>This is test content</h1>'];
	return view('DURC.durc_html',\$test_data);
});
";

	
		file_put_contents($file, $trailer, FILE_APPEND | LOCK_EX);

	} 


/*
        This accepts the data for each table in the database that DURC is aware of..
        and generates a Laravel Route for testing
*/
        public static function run_generator($data_for_gen){

                $data_for_gen = $this->_check_arguments($data_for_gen); //ensure reasonable defaults...
                extract($data_for_gen); //everything goes into the local scope... this includes all settings from the config json file...


		//we just need to add a little snippet to the route file..
		$file = LaravelTestRouteGenerator::getFile();


		$snippet = "\n 			'$URLroot$class_name', //from: $database.$table ";
		$snippet .= "\n 			'$URLroot$class_name/create', //from: $database.$table ";
		$snippet .= "\n 			'$URLroot$class_name/1', //from: $database.$table ";
		$snippet .= "\n 			'$URLroot$class_name/1/edit', //from: $database.$table ";

		file_put_contents($file, $snippet, FILE_APPEND | LOCK_EX);

		return(true);
		

	}//end generate function








}//end class
